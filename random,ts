export default function randomItem(array) {
  if (!Array.isArray(array)) {
    throw new TypeError('Expected an array');
  }

  return array[Math.floor(Math.random() * array.length)];
}

randomItem.multiple = (array, count) => {
  if (!(Number.isInteger(count) && count >= 0)) {
    throw new TypeError('Expected a non-negative integer');
  }

  return Array.from({ length: count }, () => randomItem(array));
};

export const getUniqueRandomItems = (arr: any[], count: number) => {
  const minCount = Math.min(count, arr.length);

  const result = randomItem.multiple(arr, minCount);
  const uniqueValueResult = [...new Set(result)];

  if (uniqueValueResult.length === minCount) {
    return uniqueValueResult;
  } else {
    return [
      ...uniqueValueResult,
      ...getUniqueRandomItems(
        arr.filter((x) => !uniqueValueResult.includes(x)),
        minCount - uniqueValueResult.length,
      ),
    ];
  }
};
